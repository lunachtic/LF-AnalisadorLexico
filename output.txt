| Linha 	 | Coluna: 	 | Lexeme: 	 | Token 	 |
| 1 		 | 1 		 | int 		| TK_INT 	 
| 2 		 | 1 		 | float 		| TK_FLOAT 	 
| 2 		 | 2 		 | char 		| TK_CHAR 	 
| 2 		 | 3 		 | double 		| TK_DOUBLE 	 
| 3 		 | 1 		 | struct 		| TK_STRUCT 	 
| 4 		 | 1 		 | int 		| TK_INT 	 
| 4 		 | 2 		 | j 		| TK_IDENTIFIER 	 
| 4 		 | 3 		 | , 		| TK_COMMA 	 
| 4 		 | 4 		 | * 		| TK_MULTIPLY 	 
| 4 		 | 5 		 | ( 		| TK_LPAREN 	 
| 4 		 | 6 		 | a 		| TK_IDENTIFIER 	 
| 4 		 | 7 		 | [ 		| TK_LBRACKET 	 
| 4 		 | 8 		 | 3 		| TK_NUMBER 	 
| 4 		 | 9 		 | ] 		| TK_RBRACKET 	 
| 4 		 | 10 		 | ) 		| TK_RPAREN 	 
| 4 		 | 11 		 | ; 		| TK_SEMICOLON 	 
| 5 		 | 1 		 | + 		| TK_PLUS 	 
| 5 		 | 2 		 | - 		| TK_MINUS 	 
| 5 		 | 3 		 | * 		| TK_MULTIPLY 	 
| 5 		 | 4 		 | / 		| TK_DIVIDE 	 
| 5 		 | 5 		 | % 		| TK_MODULO 	 
| 6 		 | 1 		 | & 		| TK_BITWISE_AND 	 
| 6 		 | 2 		 | | 		| TK_BITWISE_OR 	 
| 6 		 | 3 		 | ^ 		| TK_BITWISE_XOR 	 
| 6 		 | 4 		 | >>t 		| TK_BITWISE_RIGHT_SHIFT 	 
| 6 		 | 5 		 | <<t 		| TK_BITWISE_LEFT_SHIFT 	 
| 6 		 | 6 		 | ~<t 		| TK_~ 	 
| 7 		 | 1 		 | ><t 		| TK_GREATER_THAN 	 
| 7 		 | 2 		 | <<t 		| TK_LESS_THAN 	 
| 7 		 | 3 		 | >=t 		| TK_GREATER_THAN_EQUAL 	 
| 7 		 | 4 		 | <=t 		| TK_LESS_THAN_EQUAL 	 
| 7 		 | 5 		 | ==t 		| TK_EQUAL 	 
| 7 		 | 6 		 | !=t 		| TK_NOT_EQUAL 	 
| 8 		 | 1 		 | &&t 		| TK_LOGICAL_AND 	 
| 8 		 | 2 		 | ||t 		| TK_LOGICAL_OR 	 
| 8 		 | 3 		 | !|t 		| TK_BITWISE_NOT 	 
| 9 		 | 1 		 | 10 		| TK_NUMBER 	 
| 10 		 | 1 		 | ident 		| TK_IDENTIFIER 	 
| 10 		 | 2 		 | (dent 		| TK_LPAREN 	 
| 10 		 | 3 		 | 3 		| TK_NUMBER 	 
| 10 		 | 4 		 | , 		| TK_COMMA 	 
| 10 		 | 5 		 | 4 		| TK_NUMBER 	 
| 10 		 | 6 		 | ) 		| TK_RPAREN 	 
| 11 		 | 1 		 | x 		| TK_IDENTIFIER 	 
| 11 		 | 2 		 | . 		| TK_DOT 	 
| 11 		 | 3 		 | y 		| TK_IDENTIFIER 	 
| 11 		 | 4 		 | - 		| TK_MINUS 	 
| 11 		 | 5 		 | > 		| TK_GREATER_THAN 	 
| 11 		 | 6 		 | z 		| TK_IDENTIFIER 	 
| 12 		 | 1 		 | while 		| TK_WHILE 	 
| 12 		 | 2 		 | (hile 		| TK_LPAREN 	 
| 12 		 | 3 		 | a 		| TK_IDENTIFIER 	 
| 12 		 | 4 		 | ) 		| TK_RPAREN 	 
| 12 		 | 5 		 | for 		| TK_FOR 	 
| 12 		 | 6 		 | (or 		| TK_LPAREN 	 
| 12 		 | 7 		 | a 		| TK_IDENTIFIER 	 
| 12 		 | 8 		 | ; 		| TK_SEMICOLON 	 
| 12 		 | 9 		 | a 		| TK_IDENTIFIER 	 
| 12 		 | 10 		 | ; 		| TK_SEMICOLON 	 
| 12 		 | 11 		 | a 		| TK_IDENTIFIER 	 
| 12 		 | 12 		 | ) 		| TK_RPAREN 	 
| 13 		 | 1 		 | do 		| TK_DOUBLE 	 
| 13 		 | 2 		 | {o 		| TK_LBRACE 	 
| 13 		 | 3 		 | a 		| TK_IDENTIFIER 	 
| 13 		 | 4 		 | ; 		| TK_SEMICOLON 	 
| 13 		 | 5 		 | } 		| TK_RBRACE 	 
| 13 		 | 6 		 | while 		| TK_WHILE 	 
| 13 		 | 7 		 | (hile 		| TK_LPAREN 	 
| 13 		 | 8 		 | a 		| TK_IDENTIFIER 	 
| 13 		 | 9 		 | ) 		| TK_RPAREN 	 
| 13 		 | 10 		 | ; 		| TK_SEMICOLON 	 
| 14 		 | 1 		 | if 		| TK_IF 	 
| 14 		 | 2 		 | (f 		| TK_LPAREN 	 
| 14 		 | 3 		 | a 		| TK_IDENTIFIER 	 
| 14 		 | 4 		 | ) 		| TK_RPAREN 	 
| 14 		 | 5 		 | a 		| TK_IDENTIFIER 	 
| 14 		 | 6 		 | ; 		| TK_SEMICOLON 	 
| 14 		 | 7 		 | else 		| TK_ELSE 	 
| 14 		 | 8 		 | a 		| TK_IDENTIFIER 	 
| 14 		 | 9 		 | ; 		| TK_SEMICOLON 	 
| 15 		 | 1 		 | switch 		| TK_SWITCH 	 
| 15 		 | 2 		 | (witch 		| TK_LPAREN 	 
| 15 		 | 3 		 | a 		| TK_IDENTIFIER 	 
| 15 		 | 4 		 | ) 		| TK_RPAREN 	 
| 15 		 | 5 		 | { 		| TK_LBRACE 	 
| 15 		 | 6 		 | case 		| TK_CASE 	 
| 15 		 | 7 		 | 3 		| TK_NUMBER 	 
| 15 		 | 8 		 | : 		| TK_DOUBLE_DOT 	 
| 15 		 | 9 		 | a 		| TK_IDENTIFIER 	 
| 15 		 | 10 		 | ; 		| TK_SEMICOLON 	 
| 15 		 | 11 		 | default 		| TK_DEFAULT 	 
| 15 		 | 12 		 | :efault 		| TK_DOUBLE_DOT 	 
| 15 		 | 13 		 | a 		| TK_IDENTIFIER 	 
| 15 		 | 14 		 | ; 		| TK_SEMICOLON 	 
| 15 		 | 15 		 | } 		| TK_RBRACE 	 
| 15 		 | 16 		 | |nfault 		| TK_EOF 	 
